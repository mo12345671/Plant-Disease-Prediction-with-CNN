# -*- coding: utf-8 -*-
"""Plant Disease Prediction with CNN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bI1LScgbvEkk35dfFHJYEodabFLpCyr5
"""

#download data
import kagglehub

# Download latest version
data = kagglehub.dataset_download("abdallahalidev/plantvillage-dataset")

print("Path to dataset files:", data)

# Set seeds for reproducibility
import random
random.seed(0)

import numpy as np
np.random.seed(0)

import tensorflow as tf
tf.random.set_seed(0)

import os
import json
from zipfile import ZipFile
from PIL import Image

import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras import layers, models

image_path = '/kaggle/input/plantvillage-dataset/plantvillage dataset/color/Apple___Cedar_apple_rust/025b2b9a-0ec4-4132-96ac-7f2832d0db4a___FREC_C.Rust 3655.JPG'

# Read the image
img = mpimg.imread(image_path)

print(img.shape)
# Display the image
plt.imshow(img)
plt.axis('off')  # Turn off axis numbers
plt.show()

img=mpimg.imread(image_path)
print(img)

data_gen = ImageDataGenerator(rescale=1./255, validation_split=0.2)

#image parameters
img_size = 244
batch_size = 32

train_gen = data_gen.flow_from_directory('/kaggle/input/plantvillage-dataset/plantvillage dataset/color/',target_size=(img_size,img_size),batch_size=batch_size,class_mode='categorical',subset='training')

#cnn model
model = models.Sequential()
model.add(layers.Conv2D(32,(3,3),activation='relu',input_shape=(img_size,img_size,3)))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Conv2D(32,(3,3),activation='relu'))
model.add(layers.MaxPooling2D((2,2)))
model.add(layers.Flatten())
model.add(layers.Dense(256,activation='relu'))
model.add(layers.Dense(38,activation='softmax'))

model.summary()

model.compile(
    optimizer='adam',
    loss='categorical_crossentropy',
    metrics=['accuracy']
)

# Create the validation generator
validation_generator = data_gen.flow_from_directory(
    '/kaggle/input/plantvillage-dataset/plantvillage dataset/color/',
    target_size=(img_size, img_size),
    batch_size=batch_size,
    class_mode='categorical',
    subset='validation'
)

history = model.fit(
    train_gen,
    steps_per_epoch=train_gen.samples // batch_size,  # Number of steps per epoch
    epochs=5,  # Number of epochs
    validation_data=validation_generator,
    validation_steps=validation_generator.samples // batch_size  # Validation steps
)

# Model Evaluation
print("Evaluating model...")
val_loss, val_accuracy = model.evaluate(validation_generator, steps=validation_generator.samples // batch_size)
print(f"Validation Accuracy: {val_accuracy * 100:.2f}%")

model.save('plant_disease_prediction_model.h5')